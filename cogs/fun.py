import asyncio
import os
import random

import discord
import psycopg2
from discord.ext import commands


class fun(commands.Cog):

    def __init__(self, client):
        self.client = client
        DATABASE_URL = os.environ['DATABASE_URL']
        self.conn = psycopg2.connect(DATABASE_URL, sslmode='require')
        self.cursor = self.conn.cursor()
        self.songs_list = None

    @commands.command(
        name="—Ä–æ–ª–ª",
        aliases=["roll"],
        breif="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 100",
        usage="roll"
    )
    async def __roll(self, ctx, arg=None):
        await ctx.message.delete()
        if arg is None:
            rand = random.randint(1, 100)
            await ctx.send(embed=discord.Embed(
                description=f"**{ctx.author.name}** —Ä–æ–ª–ª–∏—Ç **1-100**\n"
                            f"–í–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: **{rand}** :diamonds:", color=0x00bfff), delete_after=60)
        else:
            min = int(arg.split('-')[0])
            max = int(arg.split('-')[1])
            rand = random.randint(min, max)
            await ctx.send(embed=discord.Embed(
                description=f"**{ctx.author.name}** —Ä–æ–ª–ª–∏—Ç **{min}-{max}**\n"
                            f"–í–∞—à–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ: **{rand}** :diamonds:", color=0x00bfff), delete_after=60)

    @commands.command(aliases=['flip'], usage='!flip')
    async def __flip(self, ctx):
        await ctx.message.delete()
        n = random.randint(0, 1)
        result = '–û—Ä—ë–ª' if n == 1 else '–†–µ—à–∫–∞'
        if result == '–û—Ä—ë–ª':
            embed = discord.Embed(
                description=f"**{ctx.author.name}** –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç **–º–æ–Ω–µ—Ç–∫—É**\n"
                            f"–í–∞–º –≤—ã–ø–∞–ª: **{result}** :new_moon:", color=0xd7fe90)
        else:
            embed = discord.Embed(
                description=f"**{ctx.author.name}** –ø–æ–¥–±—Ä–∞—Å—ã–≤–∞–µ—Ç **–º–æ–Ω–µ—Ç–∫—É**\n"
                            f"–í–∞–º –≤—ã–ø–∞–ª–∞: **{result}** :full_moon:", color=0xd7fe90)

        await ctx.send(embed=embed, delete_after=60)

    @commands.command(aliases=['dice'], usage='!dice')
    async def __dice(self, ctx):
        await ctx.message.delete()
        n = random.randrange(1, 7)
        embed = discord.Embed(description=f"**{ctx.author.name}** –∫–∏–¥–∞–µ—Ç **–∫—É–±–∏–∫**\n–ù–∞ –≥—Ä–∞–Ω–∏: **{str(n)}** :game_die:",
                              color=0xfb00ff)
        await ctx.send(embed=embed, delete_after=60)

    # @commands.command(aliases=['—Ä—É–ª–µ—Ç–∫–∞'])
    # @commands.cooldown(1, 5, commands.BucketType.user)
    # @commands.has_guild_permissions(manage_messages=True)
    # async def russiablyat(self, ctx):
    #     try:
    #         channel = ctx.message.author.voice.channel
    #     except:
    #         return await ctx.send( '–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–∞–∫–æ–º –ª–∏–±–æ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!' )
    #     print(len(channel.members))
    #     await ctx.message.delete()
    #     while len(channel.members) > 1:
    #         message = await ctx.send("``3``")
    #         await asyncio.sleep(0.5)
    #         await message.edit(content="``2``")
    #         await asyncio.sleep(0.5)
    #         await message.edit(content="``1``")
    #         await asyncio.sleep(0.5)
    #         dead = random.choice(channel.members)
    #         await message.edit(content=f"–±—É–º")
    #         await asyncio.sleep(0.5)
    #         await dead.move_to(None)
    #         await message.edit(content=None, embed=discord.Embed(description=f'{dead.mention} —Å–ª–æ–≤–∏–ª –ø—É–ª—é... –ü–æ–º—è–Ω–µ–º F'))
    #         await asyncio.sleep(2)

    @commands.command(aliases=['chlen', 'hui', '—á–ª–µ–Ω'], usage='!—á–ª–µ–Ω')
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def __chlen(self, ctx):
        await ctx.message.delete()
        n = random.randint(-3, 27)
        if n == -3 or n == -2 or n == 2 or n == 3 or n == 4:
            await ctx.send(
                embed=discord.Embed(description=f'**{ctx.author.name}**, –Ω—É –∏ —Ö—É–µ–∫ —É —Ç–µ–±—è...\n**{n}** —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–∞'),
                delete_after=10)
        elif n == 0:
            await ctx.send(embed=discord.Embed(
                description=f'**{ctx.author.name}**, —Ç–∞–∫ —Ç—ã –≤–æ–æ–±—â–µ –±–µ–∑ —Ö—É—è...\n**{n}** —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤'), delete_after=10)
        elif n == 1 or n == -1:
            await ctx.send(embed=discord.Embed(
                description=f'**{ctx.author.name}**, –¥–∞ —É–∂, –∫–∞–∫ —Ç—ã —Å —Ç–∞–∫–æ–π –≤–∞–ª—ã–Ω–æ–π –∂–∏–≤—ë—à—å...\n**{n}** —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä'),
                delete_after=10)
        else:
            await ctx.send(embed=discord.Embed(
                description=f'**{ctx.author.name}**, —Ç–≤–æ–π —Ö—É—ë–∫ –Ω–µ —Ç–∞–∫ —É–∂ –ø–ª–æ—Ö...\n**{n}** —Å–∞–Ω—Ç–∏–º–µ—Ç—Ä–æ–≤'),
                delete_after=10)

    @commands.command(aliases=['gay', '–≥–µ–π'], usage='!–≥–µ–π')
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def __gay(self, ctx):
        await ctx.message.delete()
        n = random.randint(0, 100)
        if n == 0:
            await ctx.send(
                embed=discord.Embed(description=f'**{ctx.author.name}**, –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–µ—Ç. –ù–∞—Ç—É—Ä–∞–ª.\n–¢—ã –≥–µ–π –Ω–∞ **{n}%**'),
                delete_after=10)
            embed = discord.Embed(title="–¢—ã –ø–æ–ª—É—á–∏–ª –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!ü•≥", description="**ü§µüèª–£–ë–ï–†–ù–ê–¢–£–†–ê–õü§µüèª**",
                                  color=0x66fcff)
            embed.add_field(name="–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞", value="**500 :tickets:**", inline=False)
            await ctx.author.send(embed=embed)
            self.cursor.execute("UPDATE users SET balance = balance + {} WHERE id = {}".format(500, ctx.author.id))
            self.cursor.execute(
                "UPDATE users SET achivements = achivements + {} WHERE id = {}".format(1, ctx.author.id))
            self.conn.commit()
            self.cursor.execute("SELECT achivements FROM users WHERE id = {}".format(ctx.author.id))
            ach = self.cursor.fetchone()[0]
            if ach == 27:
                role = discord.utils.get(ctx.author.guild.roles, name="üëë–°–∫–ª–æ–Ω–∏—Ç–µ –∫–æ–ª–µ–Ω–æüëë")
                await ctx.author.add_roles(role)
                embed = discord.Embed(title="–¢—ã –ø–æ–ª—É—á–∏–ª –ü–û–°–õ–ï–î–ù–ï–ï –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!ü•≥", description="**üèÜ–õ–ï–ì–ï–ù–î–êüèÜ**",
                                      color=0x66fcff)
                embed.add_field(name="–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞",
                                value="**10000 :tickets:**\n–ê —Ç–∞–∫–∂–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è —Ä–æ–ª—å ``üëë–°–∫–ª–æ–Ω–∏—Ç–µ –∫–æ–ª–µ–Ω–æüëë``",
                                inline=False)
                self.cursor.execute(
                    "UPDATE users SET balance = balance + {} WHERE id = {}".format(10000, ctx.author.id))
                self.conn.commit()

                await ctx.author.send(embed=embed)
        if n <= 30:
            await ctx.send(embed=discord.Embed(
                description=f'**{ctx.author.name}**, –Ω—É –Ω–µ–º–Ω–æ–≥–æ –∫–æ–Ω–µ—á–Ω–æ –µ—Å—Ç—å, –Ω–æ –º–æ–∂–µ—à—å —Å—á–∏—Ç–∞—Ç—å —Å–µ–±—è –Ω–µ –≥–µ–µ–º...\n–¢—ã –≥–µ–π –Ω–∞ **{n}%**'),
                delete_after=10)
        elif n > 30 and n < 50:
            await ctx.send(
                embed=discord.Embed(description=f'**{ctx.author.name}**, –ª–∞–¥–Ω–æ, –µ—â—ë —Å–æ–π–¥—ë—Ç...\n –¢—ã –≥–µ–π –Ω–∞ **{n} %**'),
                delete_after=10)
        elif n >= 50 and n < 99:
            await ctx.send(embed=discord.Embed(description=f'–Ø—Å–Ω–æ, **{ctx.author.name}** –≥–µ–π...\n–¢—ã –≥–µ–π –Ω–∞ **{n} %**'),
                           delete_after=10)
        else:
            await ctx.send(embed=discord.Embed(
                description=f'**{ctx.author.name}**, –ê–•–ê–•–ê–•–ê–•–ê–•–ê–•–ê–•–ê–•. –°–æ–±–æ–ª–µ–∑–Ω—É—é.\n–¢—ã –≥–µ–π –Ω–∞ **{n} %**'),
                delete_after=10)
            embed = discord.Embed(title="–¢—ã –ø–æ–ª—É—á–∏–ª –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!ü•≥",
                                  description="**üåàWelcome to the club, buddyüåà**", color=0x66fcff)
            embed.add_field(name="–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞", value="**500 :tickets:**", inline=False)
            await ctx.author.send(embed=embed)
            self.cursor.execute("UPDATE users SET balance = balance + {} WHERE id = {}".format(500, ctx.author.id))
            self.cursor.execute(
                "UPDATE users SET achivements = achivements + {} WHERE id = {}".format(1, ctx.author.id))
            self.conn.commit()

            self.cursor.execute("SELECT achivements FROM users WHERE id = {}".format(ctx.author.id))
            ach = self.cursor.fetchone()[0]
            if ach == 27:
                role = discord.utils.get(ctx.author.guild.roles, name="üëë–°–∫–ª–æ–Ω–∏—Ç–µ –∫–æ–ª–µ–Ω–æüëë")
                await ctx.author.add_roles(role)
                embed = discord.Embed(title="–¢—ã –ø–æ–ª—É—á–∏–ª –ü–û–°–õ–ï–î–ù–ï–ï –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!ü•≥", description="**üèÜ–õ–ï–ì–ï–ù–î–êüèÜ**",
                                      color=0x66fcff)
                embed.add_field(name="–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞",
                                value="**10000 :tickets:**\n–ê —Ç–∞–∫–∂–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è —Ä–æ–ª—å ``üëë–°–∫–ª–æ–Ω–∏—Ç–µ –∫–æ–ª–µ–Ω–æüëë``",
                                inline=False)
                self.cursor.execute(
                    "UPDATE users SET balance = balance + {} WHERE id = {}".format(10000, ctx.author.id))
                self.conn.commit()

                await ctx.author.send(embed=embed)

    @commands.command(aliases=['roleroll'])
    async def __roles1(self, ctx, member1: discord.Member = None, member2: discord.Member = None,
                       member3: discord.Member = None, member4: discord.Member = None, member5: discord.Member = None):
        await ctx.message.delete()
        roles = ['–º–∏–¥–µ—Ä', '–∫–µ—Ä–∏', '–æ—Ñ—Ñ–ª–µ–π–Ω–µ—Ä', '—Å–∞–ø–ø–æ—Ä—Ç', '—Ñ—É–ª —Å–∞–ø–ø–æ—Ä—Ç']
        random.shuffle(roles)
        await ctx.send(embed=discord.Embed(
            description=f'**{member1.name}** - {roles[0]}\n**{member2.name}** - {roles[1]}\n**{member3.name}** - {roles[2]}\n**{member4.name}** - {roles[3]}\n**{member5.name}** - {roles[4]}'),
            delete_after=15)

    @commands.command(aliases=['update_songs'])
    async def __update_songs(self, ctx):
        await ctx.message.delete()
        with open('resources/songs.txt') as file:
            self.songs_list = file.read().splitlines()
        await ctx.send(embed=discord.Embed(description='–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!'), delete_after=15)

    @commands.command(aliases=['add_songs'])
    async def __add_songs(self, ctx, *, text: str):
        await ctx.message.delete()
        with open('resources/songs.txt', 'a') as file:
            file.write(text + '\n')
        await ctx.send(embed=discord.Embed(description='–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!'), delete_after=15)

    @commands.command(aliases=['clear_songs'])
    async def __clear_songs(self, ctx):
        await ctx.message.delete()
        with open('resources/songs.txt', 'w') as file:
            file.write('')
        self.songs_list = None
        await ctx.send(embed=discord.Embed(description='–°–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω!'), delete_after=15)

    @commands.command(aliases=['rsongs'], usage='!rsongs')
    @commands.cooldown(1, 15, commands.BucketType.user)
    async def __random_songs(self, ctx):
        await ctx.message.delete()
        colors = ['0x28bd93', '0x6b9fff', '0xff0073', '0x8e27aa', '0x12678c', '0x75f5d5', '0x52ff8e', '0xfcfcfc',
                  '0x0b8e0f', '0xe2ff9e', '0xffb029', '0xc67e76', '0x6b7cff', '0xfbff00', '0x44ff00']
        if not self.songs_list:
            await ctx.send(embed=discord.Embed(description='–í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ —Å–ø–∏—Å–æ–∫ –ø–µ—Å–µ–Ω!'), delete_after=15)
            return
        songs = self.songs_list
        end = []
        random.shuffle(songs)
        try:
            channel = ctx.message.author.voice.channel
        except:
            return await ctx.send('–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–∞–∫–æ–º –ª–∏–±–æ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!', delete_after=5)
        else:
            member = channel.members
            n = len(channel.members)
            if len(self.songs_list) != n * 2:
                await ctx.send(embed=discord.Embed(description='–ö–∞–∂–µ—Ç—Å—è, –Ω–µ –≤—Å–µ –ø–µ—Å–Ω–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫'),
                               delete_after=15)
                return
            message = await ctx.send(embed=discord.Embed(description='–ù–∞—á–∏–Ω–∞—é —Ä–∞—Å–ø—Ä–µ–¥–µ–ª—è—Ç—å –ø–µ—Å–Ω–∏...'))
            for i in range(n):
                embed = discord.Embed(description=f'**{member[i].mention}** - {songs[i]} –∏ {songs[i + 1]}',
                                      color=random.choice(colors))
                end.append(f"\n\n{member[i].mention}: {songs[i]} –∏ {songs[i + 1]} ")
                await message.edit(embed=embed)
                await asyncio.sleep(5)
            text = '**'
            for i in range(len(end) - 1):
                text += f'\n\n{end[i]} –∏ {end[i + 1]}'
            text += '**'
            emb = discord.Embed(title=f'–ü–µ—Å–Ω–∏ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤', description=text, color=0x32aafd,
                                timestamp=ctx.message.created_at)
            await message.edit(embed=emb)
            # if n == 1:
            #     emb = discord.Embed(description=f"**{end[0]}**", color=0x32aafd, timestamp=ctx.message.created_at)
            #     await message.edit(embed=emb)
            # elif n == 2:
            #     emb = discord.Embed(description=f"**{end[0]}\n\n{end[1]}**", color=0x32aafd,
            #                         timestamp=ctx.message.created_at)
            #     await message.edit(embed=emb)
            # elif n == 3:
            #     emb = discord.Embed(description=f"**{end[0]}\n\n{end[1]}\n\n{end[2]}**", color=0x32aafd,
            #                         timestamp=ctx.message.created_at)
            #     await message.edit(embed=emb)
            # elif n == 4:
            #     emb = discord.Embed(description=f"**{end[0]}\n\n{end[1]}\n\n{end[2]}\n\n{end[3]}**", color=0x32aafd,
            #                         timestamp=ctx.message.created_at)
            #     await message.edit(embed=emb)
            # elif n == 5:
            #     emb = discord.Embed(description=f"**{end[0]}\n\n{end[1]}\n\n{end[2]}\n\n{end[3]}\n\n{end[4]}**",
            #                         color=0x32aafd, timestamp=ctx.message.created_at)
            #     await message.edit(embed=emb)

    @commands.command(aliases=['rdota'], usage='!rdota')
    @commands.cooldown(1, 15, commands.BucketType.user)
    async def __roles(self, ctx):
        await ctx.message.delete()
        colors = ['0x28bd93', '0x6b9fff', '0xff0073', '0x8e27aa', '0x12678c', '0x75f5d5', '0x52ff8e', '0xfcfcfc',
                  '0x0b8e0f', '0xe2ff9e', '0xffb029', '0xc67e76', '0x6b7cff', '0xfbff00', '0x44ff00']
        roles = ['–º–∏–¥–µ—Ä', '–∫–µ—Ä–∏', '–æ—Ñ—Ñ–ª–µ–π–Ω–µ—Ä', '—Å–∞–ø–ø–æ—Ä—Ç', '—Ñ—É–ª —Å–∞–ø–ø–æ—Ä—Ç']
        end = []
        random.shuffle(roles)
        try:
            channel = ctx.message.author.voice.channel
        except:
            return await ctx.send('–í—ã –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–∞–∫–æ–º –ª–∏–±–æ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!', delete_after=5)
        else:
            member = channel.members
            n = len(channel.members)
            message = await ctx.send(embed=discord.Embed(description='–ù–∞—á–∏–Ω–∞—é –≤—ã–¥–∞–≤–∞—Ç—å —Ä–æ–ª–∏...'), delete_after=60)
            for i in range(1, n + 1):
                embed = discord.Embed(description=f'**{member[i - 1].mention}** - {roles[i - 1]}', color=0x6b9fff)
                end.append(f"{member[i - 1].name} | {roles[i - 1]} ")
                await message.edit(embed=embed)
                await asyncio.sleep(5)
            if n == 1:
                emb = discord.Embed(description=f"**{end[0]}**", color=0x32aafd, timestamp=ctx.message.created_at)
                await message.edit(embed=emb)
            elif n == 2:
                emb = discord.Embed(description=f"**{end[0]}\n\n{end[1]}**", color=0x32aafd,
                                    timestamp=ctx.message.created_at)
                await message.edit(embed=emb)
            elif n == 3:
                emb = discord.Embed(description=f"**{end[0]}\n\n{end[1]}\n\n{end[2]}**", color=0x32aafd,
                                    timestamp=ctx.message.created_at)
                await message.edit(embed=emb)
            elif n == 4:
                emb = discord.Embed(description=f"**{end[0]}\n\n{end[1]}\n\n{end[2]}\n\n{end[3]}**", color=0x32aafd,
                                    timestamp=ctx.message.created_at)
                await message.edit(embed=emb)
            elif n == 5:
                emb = discord.Embed(description=f"**{end[0]}\n\n{end[1]}\n\n{end[2]}\n\n{end[3]}\n\n{end[4]}**",
                                    color=0x32aafd, timestamp=ctx.message.created_at)
                await message.edit(embed=emb)

        # embed = discord.Embed(description = '')

    @commands.command(aliases=['iq', 'iqtest', '–∞–π–∫—É'], usage='!–∞–π–∫—É')
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def __iq(self, ctx):
        await ctx.message.delete()
        n = random.randint(-100, 200)

        if n == -100:
            await ctx.send(embed=discord.Embed(description=f'**{ctx.author.name}**, –†–æ—Ñ–ª–∞–Ω –ø–æ–º–∏–Ω–∫–∏...**{n} iq**'),
                           delete_after=10)
            embed = discord.Embed(title="–¢—ã –ø–æ–ª—É—á–∏–ª –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!ü•≥",
                                  description="**üßü‚Äç‚ôÇÔ∏è–£ –ú–ò–ù–Ø –ë–ê–õ–¨–®–û–ô –ú–û–°–ìüßü‚Äç‚ôÇÔ∏è**", color=0x66fcff)
            embed.add_field(name="–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞", value="**500 :tickets:**", inline=False)
            await ctx.author.send(embed=embed)
            self.cursor.execute("UPDATE users SET balance = balance + {} WHERE id = {}".format(500, ctx.author.id))
            self.cursor.execute(
                "UPDATE users SET achivements = achivements + {} WHERE id = {}".format(1, ctx.author.id))
            self.conn.commit()

            self.cursor.execute("SELECT achivements FROM users WHERE id = {}".format(ctx.author.id))
            ach = self.cursor.fetchone()[0]
            if ach == 27:
                role = discord.utils.get(ctx.author.guild.roles, name="üëë–°–∫–ª–æ–Ω–∏—Ç–µ –∫–æ–ª–µ–Ω–æüëë")
                await ctx.author.add_roles(role)
                embed = discord.Embed(title="–¢—ã –ø–æ–ª—É—á–∏–ª –ü–û–°–õ–ï–î–ù–ï–ï –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!ü•≥", description="**üèÜ–õ–ï–ì–ï–ù–î–êüèÜ**",
                                      color=0x66fcff)
                embed.add_field(name="–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞",
                                value="**10000 :tickets:**\n–ê —Ç–∞–∫–∂–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è —Ä–æ–ª—å ``üëë–°–∫–ª–æ–Ω–∏—Ç–µ –∫–æ–ª–µ–Ω–æüëë``",
                                inline=False)
                self.cursor.execute(
                    "UPDATE users SET balance = balance + {} WHERE id = {}".format(10000, ctx.author.id))
                self.conn.commit()
                await ctx.author.send(embed=embed)

        elif n < 0:
            await ctx.send(embed=discord.Embed(description=f'**{ctx.author.name}**, –ï—Å—Å—Å, –º–∏–Ω—É—Å **{-1 * n} iq** —É—Ö—É!'),
                           delete_after=10)
        elif n < 30 and n > 0:
            await ctx.send(
                embed=discord.Embed(description=f'**{ctx.author.name}**, —á–µ–ª, —Ç—ã —Ç–∞–∫–æ–π –≥–ª—É–ø—ã–π...\n–¢–≤–æ–π iq: **{n}**'),
                delete_after=10)
        elif n > 30 and n < 70:
            await ctx.send(
                embed=discord.Embed(description=f'**{ctx.author.name}**, –Ω—É —Ç—ã –∏ —Ç—É–ø–∏–∫...\n–¢–≤–æ–π iq: **{n}**'),
                delete_after=10)
        elif n > 70 and n < 100:
            await ctx.send(embed=discord.Embed(description=f'**{ctx.author.name}**, –Ω–µ–ø–ª–æ—Ö–æ. \n–¢–≤–æ–π iq: **{n}**'),
                           delete_after=10)
        elif n >= 100 and n < 199:
            await ctx.send(embed=discord.Embed(
                description=f'**{ctx.author.name}**, –º–æ–∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è, —Ç—ã —Ä–µ–∞–ª—å–Ω–æ —É–º—ë–Ω, –±—Ä–æ!\n–¢–≤–æ–π iq: **{n}**'),
                delete_after=10)
        else:
            await ctx.send(embed=discord.Embed(description=f'**{ctx.author.name}**, –°–í–ï–†–•–ß–ï–õ–û–í–ï–ö!\n–¢–≤–æ–π iq: **{n}**'),
                           delete_after=10)
            embed = discord.Embed(title="–¢—ã –ø–æ–ª—É—á–∏–ª –Ω–æ–≤–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!ü•≥", description="**üß†–ü–∏—à—É –æ—Ç–≤–µ—Ç—ã –º–∞–π–ª —Ä—Éüß†**",
                                  color=0x66fcff)
            embed.add_field(name="–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞", value="**500 :tickets:**", inline=False)
            await ctx.author.send(embed=embed)
            self.cursor.execute("UPDATE users SET balance = balance + {} WHERE id = {}".format(500, ctx.author.id))
            self.cursor.execute(
                "UPDATE users SET achivements = achivements + {} WHERE id = {}".format(1, ctx.author.id))
            self.conn.commit()

            self.cursor.execute("SELECT achivements FROM users WHERE id = {}".format(ctx.author.id))
            ach = self.cursor.fetchone()[0]
            if ach == 27:
                role = discord.utils.get(ctx.author.guild.roles, name="üëë–°–∫–ª–æ–Ω–∏—Ç–µ –∫–æ–ª–µ–Ω–æüëë")
                await ctx.author.add_roles(role)
                embed = discord.Embed(title="–¢—ã –ø–æ–ª—É—á–∏–ª –ü–û–°–õ–ï–î–ù–ï–ï –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ!ü•≥", description="**üèÜ–õ–ï–ì–ï–ù–î–êüèÜ**",
                                      color=0x66fcff)
                embed.add_field(name="–¢–≤–æ—è –Ω–∞–≥—Ä–∞–¥–∞",
                                value="**10000 :tickets:**\n–ê —Ç–∞–∫–∂–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω–∞—è —Ä–æ–ª—å ``üëë–°–∫–ª–æ–Ω–∏—Ç–µ –∫–æ–ª–µ–Ω–æüëë``",
                                inline=False)
                self.cursor.execute(
                    "UPDATE users SET balance = balance + {} WHERE id = {}".format(10000, ctx.author.id))
                self.conn.commit()

                await ctx.author.send(embed=embed)

    @commands.command(aliases=['eblanvtime', '–µ–±–ª–∞–Ω_–≤_—Ç–∏–º–µ', '–¥–æ—Ç–∞2', 'dota'])
    @commands.cooldown(1, 5, commands.BucketType.user)
    async def __dota(self, ctx):
        await ctx.message.delete()
        with open('./cogs/resources/obidno.txt', encoding='utf-8') as file:
            obzivaka = file.readlines()
            obzivakarand = random.choice(obzivaka)
            await ctx.author.send(embed=discord.Embed(description=f'**{obzivakarand}**'), delete_after=60 * 10)

    @__dota.error
    async def dota_error(self, ctx, error):
        await ctx.message.delete()
        if isinstance(error, commands.errors.CommandOnCooldown):
            await ctx.author.send(
                embed=discord.Embed(description=f':no_entry: {ctx.author.mention}, –Ω–µ —Ç–∞–∫ –±—ã—Å—Ç—Ä–æ!', color=0xFFA500),
                delete_after=5)

    @commands.command()
    async def button(self, ctx):
        await ctx.message.delete()
        msg = await ctx.send('–¢—É—Ç –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∞\n–ù–∞–∂–º–∏ –Ω–∞ –º–µ–Ω—è!')
        await msg.add_reaction('üî¥')
        await msg.add_reaction('üîÅ')

        def check(reaction, user):
            return str(reaction.emoji) == 'üîÅ' and user == ctx.author

        while True:
            user, reaction = await self.client.wait_for('reaction_add', check=check)
            await msg.clear_reactions()
            await msg.add_reaction('üî¥')
            await msg.add_reaction('üîÅ')

    @commands.Cog.listener()
    async def on_raw_reaction_add(self, payload):
        guild_id = payload.guild_id
        guild = discord.utils.find(lambda g: g.id == guild_id, self.client.guilds)
        member = discord.utils.find(lambda m: m.id == payload.user_id, guild.members)
        channel = self.client.get_channel(796005631865782273)
        if member != self.client.user:
            if str(payload.emoji) == 'üî¥':
                await channel.send(embed=discord.Embed(description=f'**{member.name}** –Ω–∞–∂–∞–ª –Ω–∞ –∫—Ä–∞—Å–Ω—É—é –∫–Ω–æ–ø–∫—É!'),
                                   delete_after=5)

        # elif member.id == 312795489743405058:
        #     return
        else:
            return


def setup(client):
    client.add_cog(fun(client))
